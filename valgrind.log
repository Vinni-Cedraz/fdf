==96207== Memcheck, a memory error detector
==96207== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==96207== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==96207== Command: ./fdf test_maps/42.fdf
==96207== Parent PID: 3163
==96207== 
==96207== Conditional jump or move depends on uninitialised value(s)
==96207==    at 0x403366: colorize (colorize.c:31)
==96207==    by 0x40253B: main (main.c:24)
==96207== 
==96207== Use of uninitialised value of size 8
==96207==    at 0x403387: colorize (colorize.c:33)
==96207==    by 0x40253B: main (main.c:24)
==96207== 
==96207== Invalid read of size 4
==96207==    at 0x403387: colorize (colorize.c:33)
==96207==    by 0x40253B: main (main.c:24)
==96207==  Address 0xfffffffff4d581c8 is not stack'd, malloc'd or (recently) free'd
==96207== 
==96207== 
==96207== Process terminating with default action of signal 11 (SIGSEGV)
==96207==  Access not within mapped region at address 0xFFFFFFFFF4D581C8
==96207==    at 0x403387: colorize (colorize.c:33)
==96207==    by 0x40253B: main (main.c:24)
==96207==  If you believe this happened as a result of a stack
==96207==  overflow in your program's main thread (unlikely but
==96207==  possible), you can try to increase the size of the
==96207==  main thread stack using the --main-stacksize= flag.
==96207==  The main thread stack size used in this run was 8388608.
==96207== 
==96207== HEAP SUMMARY:
==96207==     in use at exit: 104,955 bytes in 87 blocks
==96207==   total heap usage: 657 allocs, 570 frees, 266,376 bytes allocated
==96207== 
==96207== LEAK SUMMARY:
==96207==    definitely lost: 0 bytes in 0 blocks
==96207==    indirectly lost: 0 bytes in 0 blocks
==96207==      possibly lost: 0 bytes in 0 blocks
==96207==    still reachable: 104,955 bytes in 87 blocks
==96207==         suppressed: 0 bytes in 0 blocks
==96207== Reachable blocks (those to which a pointer was found) are not shown.
==96207== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==96207== 
==96207== Use --track-origins=yes to see where uninitialised values come from
==96207== For lists of detected and suppressed errors, rerun with: -s
==96207== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 1 from 1)
